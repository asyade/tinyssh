{"config":{"output_file":null,"full_docs":false,"pub_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_name":"num_traits","crate_root":".cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src","external_crates":[{"name":"panic_unwind","num":11,"file_name":"/home/acorbeau/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src/lib.rs"},{"name":"unwind","num":8,"file_name":"/home/acorbeau/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src/lib.rs"},{"name":"std_unicode","num":5,"file_name":"/home/acorbeau/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src/lib.rs"},{"name":"core","num":2,"file_name":"/home/acorbeau/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src/lib.rs"},{"name":"alloc_jemalloc","num":10,"file_name":"/home/acorbeau/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src/lib.rs"},{"name":"libc","num":7,"file_name":"/home/acorbeau/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src/lib.rs"},{"name":"alloc","num":4,"file_name":"/home/acorbeau/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src/lib.rs"},{"name":"std","num":1,"file_name":"/home/acorbeau/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src/lib.rs"},{"name":"compiler_builtins","num":9,"file_name":"/home/acorbeau/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src/lib.rs"},{"name":"alloc_system","num":6,"file_name":"/home/acorbeau/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src/lib.rs"},{"name":"rand","num":3,"file_name":"/home/acorbeau/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src/lib.rs"}],"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":472,"byte_end":15283,"line_start":11,"line_end":432,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":143},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":945,"byte_end":952,"line_start":21,"line_end":21,"column_start":17,"column_end":24},"name":"Bounded","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1056,"byte_end":1057,"line_start":24,"line_end":24,"column_start":23,"column_end":24},"name":"*","value":"CheckedMul"},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1082,"byte_end":1083,"line_start":25,"line_end":25,"column_start":24,"column_end":25},"name":"*","value":""},{"kind":"Use","ref_id":{"krate":0,"index":88},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1110,"byte_end":1120,"line_start":26,"line_end":26,"column_start":26,"column_end":36},"name":"Saturating","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1192,"byte_end":1193,"line_start":28,"line_end":28,"column_start":15,"column_end":16},"name":"*","value":"NumCast"},{"kind":"Use","ref_id":{"krate":0,"index":291},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1208,"byte_end":1215,"line_start":29,"line_end":29,"column_start":14,"column_end":21},"name":"PrimInt","value":""}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":472,"byte_end":15283,"line_start":11,"line_end":432,"column_start":1,"column_end":2},"name":"","qualname":"::","value":".cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":8},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":59},{"krate":0,"index":86},{"krate":0,"index":126},{"krate":0,"index":154},{"krate":0,"index":224},{"krate":0,"index":277},{"krate":0,"index":309},{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":1364},{"krate":0,"index":1367},{"krate":0,"index":1370},{"krate":0,"index":1373},{"krate":0,"index":1376},{"krate":0,"index":1379},{"krate":0,"index":1382},{"krate":0,"index":1385},{"krate":0,"index":1388},{"krate":0,"index":1391},{"krate":0,"index":333},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":336},{"krate":0,"index":1400},{"krate":0,"index":1406},{"krate":0,"index":337},{"krate":0,"index":338}],"decl_id":null,"docs":" Numeric traits for generic mathematics\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":39},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"identities","qualname":"::identities","value":".cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src/identities.rs","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":391},{"krate":0,"index":393},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":44},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":15513,"byte_end":15517,"line_start":5,"line_end":5,"column_start":11,"column_end":15},"name":"Zero","qualname":"::identities::Zero","value":"Zero:  Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46}],"decl_id":null,"docs":" Defines an additive identity element for `Self`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":16029,"byte_end":16033,"line_start":21,"line_end":21,"column_start":8,"column_end":12},"name":"zero","qualname":"::identities::Zero::zero","value":"fn () -> Self","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Defines an additive identity element for `Self`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":16135,"byte_end":16142,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::identities::Zero::is_zero","value":"fn (&self) -> bool","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Defines an additive identity element for `Self`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":51},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":16970,"byte_end":16973,"line_start":65,"line_end":65,"column_start":11,"column_end":14},"name":"One","qualname":"::identities::One","value":"One:  Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":52}],"decl_id":null,"docs":" Defines a multiplicative identity element for `Self`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":17491,"byte_end":17494,"line_start":81,"line_end":81,"column_start":8,"column_end":11},"name":"one","qualname":"::identities::One::one","value":"fn () -> Self","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Defines a multiplicative identity element for `Self`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":56},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":18219,"byte_end":18223,"line_start":117,"line_end":117,"column_start":26,"column_end":30},"name":"zero","qualname":"::identities::zero","value":"fn <T> () -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the additive identity, `0`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":18194,"byte_end":18211,"line_start":117,"line_end":117,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":57},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":18329,"byte_end":18332,"line_start":120,"line_end":120,"column_start":26,"column_end":29},"name":"one","qualname":"::identities::one","value":"fn <T> () -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplicative identity, `1`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":18304,"byte_end":18321,"line_start":120,"line_end":120,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":59},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sign","qualname":"::sign","value":".cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src/sign.rs","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":72},{"krate":0,"index":399},{"krate":0,"index":405},{"krate":0,"index":411},{"krate":0,"index":417},{"krate":0,"index":423},{"krate":0,"index":73},{"krate":0,"index":79},{"krate":0,"index":429},{"krate":0,"index":435},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":85}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":66},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":19218,"byte_end":19224,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"Signed","qualname":"::sign::Signed","value":"Signed:  Sized + Num + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71}],"decl_id":null,"docs":" Useful functions for signed numbers (i.e. numbers that can be negative).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":19477,"byte_end":19480,"line_start":14,"line_end":14,"column_start":8,"column_end":11},"name":"abs","qualname":"::sign::Signed::abs","value":"fn (&self) -> Self","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":" Useful functions for signed numbers (i.e. numbers that can be negative).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":19705,"byte_end":19712,"line_start":20,"line_end":20,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::sign::Signed::abs_sub","value":"fn (&self, other: &Self) -> Self","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":" Useful functions for signed numbers (i.e. numbers that can be negative).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":20170,"byte_end":20176,"line_start":35,"line_end":35,"column_start":8,"column_end":14},"name":"signum","qualname":"::sign::Signed::signum","value":"fn (&self) -> Self","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":" Useful functions for signed numbers (i.e. numbers that can be negative).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":20293,"byte_end":20304,"line_start":38,"line_end":38,"column_start":8,"column_end":19},"name":"is_positive","qualname":"::sign::Signed::is_positive","value":"fn (&self) -> bool","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":" Useful functions for signed numbers (i.e. numbers that can be negative).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":20421,"byte_end":20432,"line_start":41,"line_end":41,"column_start":8,"column_end":19},"name":"is_negative","qualname":"::sign::Signed::is_negative","value":"fn (&self) -> bool","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":" Useful functions for signed numbers (i.e. numbers that can be negative).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":80},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":23563,"byte_end":23566,"line_start":149,"line_end":149,"column_start":8,"column_end":11},"name":"abs","qualname":"::sign::abs","value":"fn <T> (value: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":23538,"byte_end":23555,"line_start":148,"line_end":148,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":81},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":23803,"byte_end":23810,"line_start":158,"line_end":158,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::sign::abs_sub","value":"fn <T> (x: T, y: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":23778,"byte_end":23795,"line_start":157,"line_end":157,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":82},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":24254,"byte_end":24260,"line_start":175,"line_end":175,"column_start":26,"column_end":32},"name":"signum","qualname":"::sign::signum","value":"fn <T> (value: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the sign of the number.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":24229,"byte_end":24246,"line_start":175,"line_end":175,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":83},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":24365,"byte_end":24373,"line_start":178,"line_end":178,"column_start":11,"column_end":19},"name":"Unsigned","qualname":"::sign::Unsigned","value":"Unsigned:  Num","parent":null,"children":[],"decl_id":null,"docs":" A trait for values which cannot be negative\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":86},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ops","qualname":"::ops","value":".cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src/ops/mod.rs","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":92},{"krate":0,"index":107}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":87},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,115,97,116,117,114,97,116,105,110,103,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"saturating","qualname":"::ops::saturating","value":".cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src/ops/saturating.rs","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":446},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":473}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":88},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,115,97,116,117,114,97,116,105,110,103,46,114,115],"byte_start":25140,"byte_end":25150,"line_start":2,"line_end":2,"column_start":11,"column_end":21},"name":"Saturating","qualname":"::ops::saturating::Saturating","value":"Saturating","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90}],"decl_id":null,"docs":" Saturating math operations\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,115,97,116,117,114,97,116,105,110,103,46,114,115],"byte_start":25276,"byte_end":25290,"line_start":5,"line_end":5,"column_start":8,"column_end":22},"name":"saturating_add","qualname":"::ops::saturating::Saturating::saturating_add","value":"fn (self, v: Self) -> Self","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" Saturating math operations\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,115,97,116,117,114,97,116,105,110,103,46,114,115],"byte_start":25442,"byte_end":25456,"line_start":9,"line_end":9,"column_start":8,"column_end":22},"name":"saturating_sub","qualname":"::ops::saturating::Saturating::saturating_sub","value":"fn (self, v: Self) -> Self","parent":{"krate":0,"index":88},"children":[],"decl_id":null,"docs":" Saturating math operations\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":92},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"checked","qualname":"::ops::checked","value":".cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src/ops/checked.rs","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":101},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":514},{"krate":0,"index":103},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":105},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":554}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":98},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":26100,"byte_end":26110,"line_start":5,"line_end":5,"column_start":11,"column_end":21},"name":"CheckedAdd","qualname":"::ops::checked::CheckedAdd","value":"CheckedAdd:  Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":99}],"decl_id":null,"docs":" Performs addition that returns `None` instead of wrapping around on\n overflow.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":26250,"byte_end":26261,"line_start":8,"line_end":8,"column_start":8,"column_end":19},"name":"checked_add","qualname":"::ops::checked::CheckedAdd::checked_add","value":"fn (&self, v: &Self) -> Option<Self>","parent":{"krate":0,"index":98},"children":[],"decl_id":null,"docs":" Performs addition that returns `None` instead of wrapping around on\n overflow.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":101},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":27112,"byte_end":27122,"line_start":35,"line_end":35,"column_start":11,"column_end":21},"name":"CheckedSub","qualname":"::ops::checked::CheckedSub","value":"CheckedSub:  Sized + Sub<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":102}],"decl_id":null,"docs":" Performs subtraction that returns `None` instead of wrapping around on underflow.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":27269,"byte_end":27280,"line_start":38,"line_end":38,"column_start":8,"column_end":19},"name":"checked_sub","qualname":"::ops::checked::CheckedSub::checked_sub","value":"fn (&self, v: &Self) -> Option<Self>","parent":{"krate":0,"index":101},"children":[],"decl_id":null,"docs":" Performs subtraction that returns `None` instead of wrapping around on underflow.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":103},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":27887,"byte_end":27897,"line_start":55,"line_end":55,"column_start":11,"column_end":21},"name":"CheckedMul","qualname":"::ops::checked::CheckedMul","value":"CheckedMul:  Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":104}],"decl_id":null,"docs":" Performs multiplication that returns `None` instead of wrapping around on underflow or\n overflow.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":28069,"byte_end":28080,"line_start":58,"line_end":58,"column_start":8,"column_end":19},"name":"checked_mul","qualname":"::ops::checked::CheckedMul::checked_mul","value":"fn (&self, v: &Self) -> Option<Self>","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" Performs multiplication that returns `None` instead of wrapping around on underflow or\n overflow.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":105},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":28727,"byte_end":28737,"line_start":75,"line_end":75,"column_start":11,"column_end":21},"name":"CheckedDiv","qualname":"::ops::checked::CheckedDiv","value":"CheckedDiv:  Sized + Div<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":106}],"decl_id":null,"docs":" Performs division that returns `None` instead of panicking on division by zero and instead of\n wrapping around on underflow and overflow.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":28915,"byte_end":28926,"line_start":78,"line_end":78,"column_start":8,"column_end":19},"name":"checked_div","qualname":"::ops::checked::CheckedDiv::checked_div","value":"fn (&self, v: &Self) -> Option<Self>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Performs division that returns `None` instead of panicking on division by zero and instead of\n wrapping around on underflow and overflow.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":107},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"wrapping","qualname":"::ops::wrapping","value":".cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src/ops/wrapping.rs","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":116},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":118},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":114},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":30042,"byte_end":30053,"line_start":24,"line_end":24,"column_start":11,"column_end":22},"name":"WrappingAdd","qualname":"::ops::wrapping::WrappingAdd","value":"WrappingAdd:  Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":115}],"decl_id":null,"docs":" Performs addition that wraps around on overflow.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":30210,"byte_end":30222,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"wrapping_add","qualname":"::ops::wrapping::WrappingAdd::wrapping_add","value":"fn (&self, v: &Self) -> Self","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Performs addition that wraps around on overflow.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":116},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":30802,"byte_end":30813,"line_start":43,"line_end":43,"column_start":11,"column_end":22},"name":"WrappingSub","qualname":"::ops::wrapping::WrappingSub","value":"WrappingSub:  Sized + Sub<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":117}],"decl_id":null,"docs":" Performs subtraction that wraps around on overflow.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":30973,"byte_end":30985,"line_start":46,"line_end":46,"column_start":8,"column_end":20},"name":"wrapping_sub","qualname":"::ops::wrapping::WrappingSub::wrapping_sub","value":"fn (&self, v: &Self) -> Self","parent":{"krate":0,"index":116},"children":[],"decl_id":null,"docs":" Performs subtraction that wraps around on overflow.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":118},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":31568,"byte_end":31579,"line_start":62,"line_end":62,"column_start":11,"column_end":22},"name":"WrappingMul","qualname":"::ops::wrapping::WrappingMul","value":"WrappingMul:  Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":119}],"decl_id":null,"docs":" Performs multiplication that wraps around on overflow.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":31742,"byte_end":31754,"line_start":65,"line_end":65,"column_start":8,"column_end":20},"name":"wrapping_mul","qualname":"::ops::wrapping::WrappingMul::wrapping_mul","value":"fn (&self, v: &Self) -> Self","parent":{"krate":0,"index":118},"children":[],"decl_id":null,"docs":" Performs multiplication that wraps around on overflow.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":126},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,98,111,117,110,100,115,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bounds","qualname":"::bounds","value":".cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src/bounds.rs","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":147},{"krate":0,"index":646},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":649},{"krate":0,"index":652},{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":667},{"krate":0,"index":670},{"krate":0,"index":673},{"krate":0,"index":676},{"krate":0,"index":679},{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":703},{"krate":0,"index":706},{"krate":0,"index":709},{"krate":0,"index":712},{"krate":0,"index":153}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":143},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,98,111,117,110,100,115,46,114,115],"byte_start":34114,"byte_end":34121,"line_start":7,"line_end":7,"column_start":11,"column_end":18},"name":"Bounded","qualname":"::bounds::Bounded","value":"Bounded","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145}],"decl_id":null,"docs":" Numbers which have upper and lower bounds\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,98,111,117,110,100,115,46,114,115],"byte_start":34257,"byte_end":34266,"line_start":10,"line_end":10,"column_start":8,"column_end":17},"name":"min_value","qualname":"::bounds::Bounded::min_value","value":"fn () -> Self","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" Numbers which have upper and lower bounds\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,98,111,117,110,100,115,46,114,115],"byte_start":34351,"byte_end":34360,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"max_value","qualname":"::bounds::Bounded::max_value","value":"fn () -> Self","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" Numbers which have upper and lower bounds\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":154},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"float","qualname":"::float","value":".cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src/float.rs","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":715},{"krate":0,"index":773},{"krate":0,"index":223},{"krate":0,"index":831},{"krate":0,"index":848},{"krate":0,"index":865}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":162},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":36876,"byte_end":36881,"line_start":13,"line_end":13,"column_start":11,"column_end":16},"name":"Float","qualname":"::float::Float","value":"Float:  Num + Copy + NumCast + PartialOrd + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":37148,"byte_end":37151,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"nan","qualname":"::float::Float::nan","value":"fn () -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":37473,"byte_end":37481,"line_start":42,"line_end":42,"column_start":8,"column_end":16},"name":"infinity","qualname":"::float::Float::infinity","value":"fn () -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":37832,"byte_end":37844,"line_start":55,"line_end":55,"column_start":8,"column_end":20},"name":"neg_infinity","qualname":"::float::Float::neg_infinity","value":"fn () -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":38214,"byte_end":38222,"line_start":69,"line_end":69,"column_start":8,"column_end":16},"name":"neg_zero","qualname":"::float::Float::neg_zero","value":"fn () -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":38489,"byte_end":38498,"line_start":81,"line_end":81,"column_start":8,"column_end":17},"name":"min_value","qualname":"::float::Float::min_value","value":"fn () -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":38797,"byte_end":38815,"line_start":93,"line_end":93,"column_start":8,"column_end":26},"name":"min_positive_value","qualname":"::float::Float::min_positive_value","value":"fn () -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":39192,"byte_end":39199,"line_start":110,"line_end":110,"column_start":8,"column_end":15},"name":"epsilon","qualname":"::float::Float::epsilon","value":"fn () -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":39540,"byte_end":39549,"line_start":123,"line_end":123,"column_start":8,"column_end":17},"name":"max_value","qualname":"::float::Float::max_value","value":"fn () -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":39847,"byte_end":39853,"line_start":137,"line_end":137,"column_start":8,"column_end":14},"name":"is_nan","qualname":"::float::Float::is_nan","value":"fn (self) -> bool","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":40391,"byte_end":40402,"line_start":157,"line_end":157,"column_start":8,"column_end":19},"name":"is_infinite","qualname":"::float::Float::is_infinite","value":"fn (self) -> bool","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":40894,"byte_end":40903,"line_start":176,"line_end":176,"column_start":8,"column_end":17},"name":"is_finite","qualname":"::float::Float::is_finite","value":"fn (self) -> bool","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":41653,"byte_end":41662,"line_start":200,"line_end":200,"column_start":8,"column_end":17},"name":"is_normal","qualname":"::float::Float::is_normal","value":"fn (self) -> bool","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":42176,"byte_end":42184,"line_start":217,"line_end":217,"column_start":8,"column_end":16},"name":"classify","qualname":"::float::Float::classify","value":"fn (self) -> FpCategory","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":42476,"byte_end":42481,"line_start":230,"line_end":230,"column_start":8,"column_end":13},"name":"floor","qualname":"::float::Float::floor","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":42769,"byte_end":42773,"line_start":243,"line_end":243,"column_start":8,"column_end":12},"name":"ceil","qualname":"::float::Float::ceil","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":43087,"byte_end":43092,"line_start":257,"line_end":257,"column_start":8,"column_end":13},"name":"round","qualname":"::float::Float::round","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":43356,"byte_end":43361,"line_start":270,"line_end":270,"column_start":8,"column_end":13},"name":"trunc","qualname":"::float::Float::trunc","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":43757,"byte_end":43762,"line_start":285,"line_end":285,"column_start":8,"column_end":13},"name":"fract","qualname":"::float::Float::fract","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":44292,"byte_end":44295,"line_start":305,"line_end":305,"column_start":8,"column_end":11},"name":"abs","qualname":"::float::Float::abs","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":44862,"byte_end":44868,"line_start":324,"line_end":324,"column_start":8,"column_end":14},"name":"signum","qualname":"::float::Float::signum","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":45344,"byte_end":45360,"line_start":342,"line_end":342,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::float::Float::is_sign_positive","value":"fn (self) -> bool","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":45832,"byte_end":45848,"line_start":360,"line_end":360,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::float::Float::is_sign_negative","value":"fn (self) -> bool","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":46370,"byte_end":46377,"line_start":378,"line_end":378,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::float::Float::mul_add","value":"fn (self, a: Self, b: Self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":46675,"byte_end":46680,"line_start":389,"line_end":389,"column_start":8,"column_end":13},"name":"recip","qualname":"::float::Float::recip","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":47017,"byte_end":47021,"line_start":403,"line_end":403,"column_start":8,"column_end":12},"name":"powi","qualname":"::float::Float::powi","value":"fn (self, n: i32) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":47300,"byte_end":47304,"line_start":415,"line_end":415,"column_start":8,"column_end":12},"name":"powf","qualname":"::float::Float::powf","value":"fn (self, n: Self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":47727,"byte_end":47731,"line_start":432,"line_end":432,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::float::Float::sqrt","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":48081,"byte_end":48084,"line_start":448,"line_end":448,"column_start":8,"column_end":11},"name":"exp","qualname":"::float::Float::exp","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":48362,"byte_end":48366,"line_start":462,"line_end":462,"column_start":8,"column_end":12},"name":"exp2","qualname":"::float::Float::exp2","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":48713,"byte_end":48715,"line_start":478,"line_end":478,"column_start":8,"column_end":10},"name":"ln","qualname":"::float::Float::ln","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":49225,"byte_end":49228,"line_start":497,"line_end":497,"column_start":8,"column_end":11},"name":"log","qualname":"::float::Float::log","value":"fn (self, base: Self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":49550,"byte_end":49554,"line_start":511,"line_end":511,"column_start":8,"column_end":12},"name":"log2","qualname":"::float::Float::log2","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":49869,"byte_end":49874,"line_start":525,"line_end":525,"column_start":8,"column_end":13},"name":"log10","qualname":"::float::Float::log10","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":50173,"byte_end":50183,"line_start":539,"line_end":539,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"::float::Float::to_degrees","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":50614,"byte_end":50624,"line_start":557,"line_end":557,"column_start":8,"column_end":18},"name":"to_radians","qualname":"::float::Float::to_radians","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":50978,"byte_end":50981,"line_start":573,"line_end":573,"column_start":8,"column_end":11},"name":"max","qualname":"::float::Float::max","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":51220,"byte_end":51223,"line_start":585,"line_end":585,"column_start":8,"column_end":11},"name":"min","qualname":"::float::Float::min","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":51721,"byte_end":51728,"line_start":604,"line_end":604,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::float::Float::abs_sub","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":52036,"byte_end":52040,"line_start":618,"line_end":618,"column_start":8,"column_end":12},"name":"cbrt","qualname":"::float::Float::cbrt","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":52458,"byte_end":52463,"line_start":634,"line_end":634,"column_start":8,"column_end":13},"name":"hypot","qualname":"::float::Float::hypot","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":52791,"byte_end":52794,"line_start":648,"line_end":648,"column_start":8,"column_end":11},"name":"sin","qualname":"::float::Float::sin","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":53111,"byte_end":53114,"line_start":662,"line_end":662,"column_start":8,"column_end":11},"name":"cos","qualname":"::float::Float::cos","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":53424,"byte_end":53427,"line_start":675,"line_end":675,"column_start":8,"column_end":11},"name":"tan","qualname":"::float::Float::tan","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":53907,"byte_end":53911,"line_start":692,"line_end":692,"column_start":8,"column_end":12},"name":"asin","qualname":"::float::Float::asin","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":54387,"byte_end":54391,"line_start":709,"line_end":709,"column_start":8,"column_end":12},"name":"acos","qualname":"::float::Float::acos","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":54755,"byte_end":54759,"line_start":724,"line_end":724,"column_start":8,"column_end":12},"name":"atan","qualname":"::float::Float::atan","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":55640,"byte_end":55645,"line_start":753,"line_end":753,"column_start":8,"column_end":13},"name":"atan2","qualname":"::float::Float::atan2","value":"fn (self, other: Self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":56159,"byte_end":56166,"line_start":771,"line_end":771,"column_start":8,"column_end":15},"name":"sin_cos","qualname":"::float::Float::sin_cos","value":"fn (self) -> (Self, Self)","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":56534,"byte_end":56540,"line_start":786,"line_end":786,"column_start":8,"column_end":14},"name":"exp_m1","qualname":"::float::Float::exp_m1","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":56967,"byte_end":56972,"line_start":802,"line_end":802,"column_start":8,"column_end":13},"name":"ln_1p","qualname":"::float::Float::ln_1p","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":57392,"byte_end":57396,"line_start":820,"line_end":820,"column_start":8,"column_end":12},"name":"sinh","qualname":"::float::Float::sinh","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":57832,"byte_end":57836,"line_start":838,"line_end":838,"column_start":8,"column_end":12},"name":"cosh","qualname":"::float::Float::cosh","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":58292,"byte_end":58296,"line_start":856,"line_end":856,"column_start":8,"column_end":12},"name":"tanh","qualname":"::float::Float::tanh","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":58591,"byte_end":58596,"line_start":870,"line_end":870,"column_start":8,"column_end":13},"name":"asinh","qualname":"::float::Float::asinh","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":58893,"byte_end":58898,"line_start":884,"line_end":884,"column_start":8,"column_end":13},"name":"acosh","qualname":"::float::Float::acosh","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":59229,"byte_end":59234,"line_start":899,"line_end":899,"column_start":8,"column_end":13},"name":"atanh","qualname":"::float::Float::atanh","value":"fn (self) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":60083,"byte_end":60097,"line_start":923,"line_end":923,"column_start":8,"column_end":22},"name":"integer_decode","qualname":"::float::Float::integer_decode","value":"fn (self) -> (u64, i16, i8)","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":224},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cast","qualname":"::cast","value":".cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src/cast.rs","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":882},{"krate":0,"index":895},{"krate":0,"index":908},{"krate":0,"index":921},{"krate":0,"index":934},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":947},{"krate":0,"index":960},{"krate":0,"index":973},{"krate":0,"index":986},{"krate":0,"index":999},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":1012},{"krate":0,"index":1025},{"krate":0,"index":250},{"krate":0,"index":263},{"krate":0,"index":1038},{"krate":0,"index":1049},{"krate":0,"index":1060},{"krate":0,"index":1071},{"krate":0,"index":1082},{"krate":0,"index":1093},{"krate":0,"index":1104},{"krate":0,"index":1115},{"krate":0,"index":1126},{"krate":0,"index":1137},{"krate":0,"index":1148},{"krate":0,"index":1159},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":273},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1184},{"krate":0,"index":1186},{"krate":0,"index":1188},{"krate":0,"index":1190},{"krate":0,"index":1192},{"krate":0,"index":274},{"krate":0,"index":276}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":229},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":70294,"byte_end":70305,"line_start":8,"line_end":8,"column_start":11,"column_end":22},"name":"ToPrimitive","qualname":"::cast::ToPrimitive","value":"ToPrimitive","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241}],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":70381,"byte_end":70389,"line_start":11,"line_end":11,"column_start":8,"column_end":16},"name":"to_isize","qualname":"::cast::ToPrimitive::to_isize","value":"fn (&self) -> Option<isize>","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":70542,"byte_end":70547,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"to_i8","qualname":"::cast::ToPrimitive::to_i8","value":"fn (&self) -> Option<i8>","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":70695,"byte_end":70701,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"to_i16","qualname":"::cast::ToPrimitive::to_i16","value":"fn (&self) -> Option<i16>","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":70851,"byte_end":70857,"line_start":29,"line_end":29,"column_start":8,"column_end":14},"name":"to_i32","qualname":"::cast::ToPrimitive::to_i32","value":"fn (&self) -> Option<i32>","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":70993,"byte_end":70999,"line_start":34,"line_end":34,"column_start":8,"column_end":14},"name":"to_i64","qualname":"::cast::ToPrimitive::to_i64","value":"fn (&self) -> Option<i64>","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":71096,"byte_end":71104,"line_start":38,"line_end":38,"column_start":8,"column_end":16},"name":"to_usize","qualname":"::cast::ToPrimitive::to_usize","value":"fn (&self) -> Option<usize>","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":71257,"byte_end":71262,"line_start":44,"line_end":44,"column_start":8,"column_end":13},"name":"to_u8","qualname":"::cast::ToPrimitive::to_u8","value":"fn (&self) -> Option<u8>","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":71410,"byte_end":71416,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"to_u16","qualname":"::cast::ToPrimitive::to_u16","value":"fn (&self) -> Option<u16>","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":71566,"byte_end":71572,"line_start":56,"line_end":56,"column_start":8,"column_end":14},"name":"to_u32","qualname":"::cast::ToPrimitive::to_u32","value":"fn (&self) -> Option<u32>","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":71722,"byte_end":71728,"line_start":62,"line_end":62,"column_start":8,"column_end":14},"name":"to_u64","qualname":"::cast::ToPrimitive::to_u64","value":"fn (&self) -> Option<u64>","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":71824,"byte_end":71830,"line_start":66,"line_end":66,"column_start":8,"column_end":14},"name":"to_f32","qualname":"::cast::ToPrimitive::to_f32","value":"fn (&self) -> Option<f32>","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":71980,"byte_end":71986,"line_start":72,"line_end":72,"column_start":8,"column_end":14},"name":"to_f64","qualname":"::cast::ToPrimitive::to_f64","value":"fn (&self) -> Option<f64>","parent":{"krate":0,"index":229},"children":[],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":250},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":79058,"byte_end":79071,"line_start":276,"line_end":276,"column_start":11,"column_end":24},"name":"FromPrimitive","qualname":"::cast::FromPrimitive","value":"FromPrimitive:  Sized","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262}],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":79253,"byte_end":79263,"line_start":280,"line_end":280,"column_start":8,"column_end":18},"name":"from_isize","qualname":"::cast::FromPrimitive::from_isize","value":"fn (n: isize) -> Option<Self>","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":79509,"byte_end":79516,"line_start":287,"line_end":287,"column_start":8,"column_end":15},"name":"from_i8","qualname":"::cast::FromPrimitive::from_i8","value":"fn (n: i8) -> Option<Self>","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":79760,"byte_end":79768,"line_start":294,"line_end":294,"column_start":8,"column_end":16},"name":"from_i16","qualname":"::cast::FromPrimitive::from_i16","value":"fn (n: i16) -> Option<Self>","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":80013,"byte_end":80021,"line_start":301,"line_end":301,"column_start":8,"column_end":16},"name":"from_i32","qualname":"::cast::FromPrimitive::from_i32","value":"fn (n: i32) -> Option<Self>","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":80252,"byte_end":80260,"line_start":307,"line_end":307,"column_start":8,"column_end":16},"name":"from_i64","qualname":"::cast::FromPrimitive::from_i64","value":"fn (n: i64) -> Option<Self>","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":80457,"byte_end":80467,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"from_usize","qualname":"::cast::FromPrimitive::from_usize","value":"fn (n: usize) -> Option<Self>","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":80713,"byte_end":80720,"line_start":319,"line_end":319,"column_start":8,"column_end":15},"name":"from_u8","qualname":"::cast::FromPrimitive::from_u8","value":"fn (n: u8) -> Option<Self>","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":80964,"byte_end":80972,"line_start":326,"line_end":326,"column_start":8,"column_end":16},"name":"from_u16","qualname":"::cast::FromPrimitive::from_u16","value":"fn (n: u16) -> Option<Self>","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":81217,"byte_end":81225,"line_start":333,"line_end":333,"column_start":8,"column_end":16},"name":"from_u32","qualname":"::cast::FromPrimitive::from_u32","value":"fn (n: u32) -> Option<Self>","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":81456,"byte_end":81464,"line_start":339,"line_end":339,"column_start":8,"column_end":16},"name":"from_u64","qualname":"::cast::FromPrimitive::from_u64","value":"fn (n: u64) -> Option<Self>","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":81659,"byte_end":81667,"line_start":344,"line_end":344,"column_start":8,"column_end":16},"name":"from_f32","qualname":"::cast::FromPrimitive::from_f32","value":"fn (n: f32) -> Option<Self>","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":81911,"byte_end":81919,"line_start":351,"line_end":351,"column_start":8,"column_end":16},"name":"from_f64","qualname":"::cast::FromPrimitive::from_f64","value":"fn (n: f64) -> Option<Self>","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":270},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":83886,"byte_end":83890,"line_start":411,"line_end":411,"column_start":8,"column_end":12},"name":"cast","qualname":"::cast::cast","value":"fn <T, U> (n: T) -> Option<U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one machine scalar to another.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":83869,"byte_end":83878,"line_start":410,"line_end":410,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":271},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":84024,"byte_end":84031,"line_start":416,"line_end":416,"column_start":11,"column_end":18},"name":"NumCast","qualname":"::cast::NumCast","value":"NumCast:  Sized + ToPrimitive","parent":null,"children":[{"krate":0,"index":272}],"decl_id":null,"docs":" An interface for casting between machine scalars.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":84182,"byte_end":84186,"line_start":419,"line_end":419,"column_start":8,"column_end":12},"name":"from","qualname":"::cast::NumCast::from","value":"fn <T> (n: T) -> Option<Self>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" An interface for casting between machine scalars.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":277},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"int","qualname":"::int","value":".cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src/int.rs","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":308},{"krate":0,"index":1194},{"krate":0,"index":1211},{"krate":0,"index":1228},{"krate":0,"index":1245},{"krate":0,"index":1262},{"krate":0,"index":1279},{"krate":0,"index":1296},{"krate":0,"index":1313},{"krate":0,"index":1330},{"krate":0,"index":1347}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":291},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":87044,"byte_end":87051,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"PrimInt","qualname":"::int::PrimInt","value":"PrimInt:  Sized + Copy + Num + NumCast + Bounded + PartialOrd + Ord + Eq + Not<Output =\nSelf> + BitAnd<Output = Self> + BitOr<Output = Self> + BitXor<Output = Self> +\nShl<usize, Output = Self> + Shr<usize, Output = Self> + CheckedAdd<Output =\nSelf> + CheckedSub<Output = Self> + CheckedMul<Output = Self> +\nCheckedDiv<Output = Self> + Saturating","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":87695,"byte_end":87705,"line_start":37,"line_end":37,"column_start":8,"column_end":18},"name":"count_ones","qualname":"::int::PrimInt::count_ones","value":"fn (self) -> u32","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":87982,"byte_end":87993,"line_start":50,"line_end":50,"column_start":8,"column_end":19},"name":"count_zeros","qualname":"::int::PrimInt::count_zeros","value":"fn (self) -> u32","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":88289,"byte_end":88302,"line_start":64,"line_end":64,"column_start":8,"column_end":21},"name":"leading_zeros","qualname":"::int::PrimInt::leading_zeros","value":"fn (self) -> u32","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":88599,"byte_end":88613,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"trailing_zeros","qualname":"::int::PrimInt::trailing_zeros","value":"fn (self) -> u32","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":89008,"byte_end":89019,"line_start":93,"line_end":93,"column_start":8,"column_end":19},"name":"rotate_left","qualname":"::int::PrimInt::rotate_left","value":"fn (self, n: u32) -> Self","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":89431,"byte_end":89443,"line_start":108,"line_end":108,"column_start":8,"column_end":20},"name":"rotate_right","qualname":"::int::PrimInt::rotate_right","value":"fn (self, n: u32) -> Self","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":89886,"byte_end":89896,"line_start":125,"line_end":125,"column_start":8,"column_end":18},"name":"signed_shl","qualname":"::int::PrimInt::signed_shl","value":"fn (self, n: u32) -> Self","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":90372,"byte_end":90382,"line_start":142,"line_end":142,"column_start":8,"column_end":18},"name":"signed_shr","qualname":"::int::PrimInt::signed_shr","value":"fn (self, n: u32) -> Self","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":90829,"byte_end":90841,"line_start":159,"line_end":159,"column_start":8,"column_end":20},"name":"unsigned_shl","qualname":"::int::PrimInt::unsigned_shl","value":"fn (self, n: u32) -> Self","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":91288,"byte_end":91300,"line_start":176,"line_end":176,"column_start":8,"column_end":20},"name":"unsigned_shr","qualname":"::int::PrimInt::unsigned_shr","value":"fn (self, n: u32) -> Self","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":91605,"byte_end":91615,"line_start":190,"line_end":190,"column_start":8,"column_end":18},"name":"swap_bytes","qualname":"::int::PrimInt::swap_bytes","value":"fn (self) -> Self","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":92111,"byte_end":92118,"line_start":209,"line_end":209,"column_start":8,"column_end":15},"name":"from_be","qualname":"::int::PrimInt::from_be","value":"fn (x: Self) -> Self","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":92623,"byte_end":92630,"line_start":228,"line_end":228,"column_start":8,"column_end":15},"name":"from_le","qualname":"::int::PrimInt::from_le","value":"fn (x: Self) -> Self","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":93113,"byte_end":93118,"line_start":247,"line_end":247,"column_start":8,"column_end":13},"name":"to_be","qualname":"::int::PrimInt::to_be","value":"fn (self) -> Self","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":93604,"byte_end":93609,"line_start":266,"line_end":266,"column_start":8,"column_end":13},"name":"to_le","qualname":"::int::PrimInt::to_le","value":"fn (self) -> Self","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":93847,"byte_end":93850,"line_start":277,"line_end":277,"column_start":8,"column_end":11},"name":"pow","qualname":"::int::PrimInt::pow","value":"fn (self, exp: u32) -> Self","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":309},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,112,111,119,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pow","qualname":"::pow","value":".cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.1.40/src/pow.rs","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":314},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,112,111,119,46,114,115],"byte_start":96600,"byte_end":96603,"line_start":15,"line_end":15,"column_start":8,"column_end":11},"name":"pow","qualname":"::pow::pow","value":"fn <T> (mut base: T, mut exp: usize) -> T","parent":null,"children":[],"decl_id":null,"docs":" Raises a value to the power of exp, using exponentiation by squaring.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,112,111,119,46,114,115],"byte_start":96583,"byte_end":96592,"line_start":14,"line_end":14,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":315},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,112,111,119,46,114,115],"byte_start":97400,"byte_end":97411,"line_start":49,"line_end":49,"column_start":8,"column_end":19},"name":"checked_pow","qualname":"::pow::checked_pow","value":"fn <T> (mut base: T, mut exp: usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Raises a value to the power of exp, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,112,111,119,46,114,115],"byte_start":97383,"byte_end":97392,"line_start":48,"line_end":48,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":317},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1513,"byte_end":1516,"line_start":43,"line_end":43,"column_start":11,"column_end":14},"name":"Num","qualname":"::Num","value":"Num:  PartialEq + Zero + One + NumOps","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319}],"decl_id":null,"docs":" The base trait for numeric types, covering `0` and `1` values,\n comparisons, basic numeric operations, and string conversion.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":318},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1561,"byte_end":1576,"line_start":45,"line_end":45,"column_start":10,"column_end":25},"name":"FromStrRadixErr","qualname":"::Num::FromStrRadixErr","value":"type FromStrRadixErr;","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1934,"byte_end":1948,"line_start":60,"line_end":60,"column_start":8,"column_end":22},"name":"from_str_radix","qualname":"::Num::from_str_radix","value":"fn (str: &str, radix: u32) -> Result<Self, Self::FromStrRadixErr>","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":" The base trait for numeric types, covering `0` and `1` values,\n comparisons, basic numeric operations, and string conversion.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":320},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2170,"byte_end":2176,"line_start":66,"line_end":66,"column_start":11,"column_end":17},"name":"NumOps","qualname":"::NumOps","value":"NumOps<Rhs = Self, Output = Self>:  Add<Rhs, Output = Output> + Sub<Rhs, Output = Output> + Mul<Rhs, Output =\nOutput> + Div<Rhs, Output = Output> + Rem<Rhs, Output = Output>","parent":null,"children":[],"decl_id":null,"docs":" The trait for types implementing basic numeric operations","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":322},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2801,"byte_end":2807,"line_start":86,"line_end":86,"column_start":11,"column_end":17},"name":"NumRef","qualname":"::NumRef","value":"NumRef:  Num + for<'r>NumOps<&'r Self>","parent":null,"children":[],"decl_id":null,"docs":" The trait for `Num` types which also implement numeric operations taking\n the second operand by reference.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":324},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3126,"byte_end":3132,"line_start":93,"line_end":93,"column_start":11,"column_end":17},"name":"RefNum","qualname":"::RefNum","value":"RefNum<Base>:  NumOps<Base, Base> + for<'r>NumOps<&'r Base, Base>","parent":null,"children":[],"decl_id":null,"docs":" The trait for references which implement numeric operations, taking the\n second operand either by value or by reference.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":326},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3465,"byte_end":3477,"line_start":99,"line_end":99,"column_start":11,"column_end":23},"name":"NumAssignOps","qualname":"::NumAssignOps","value":"NumAssignOps<Rhs = Self>:  AddAssign<Rhs> + SubAssign<Rhs> + MulAssign<Rhs> + DivAssign<Rhs> +\nRemAssign<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" The trait for types implementing numeric assignment operators (like `+=`).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":328},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3926,"byte_end":3935,"line_start":118,"line_end":118,"column_start":11,"column_end":20},"name":"NumAssign","qualname":"::NumAssign","value":"NumAssign:  Num + NumAssignOps","parent":null,"children":[],"decl_id":null,"docs":" The trait for `Num` types which also implement assignment operators.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":330},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4231,"byte_end":4243,"line_start":125,"line_end":125,"column_start":11,"column_end":23},"name":"NumAssignRef","qualname":"::NumAssignRef","value":"NumAssignRef:  NumAssign + for<'r>NumAssignOps<&'r Self>","parent":null,"children":[],"decl_id":null,"docs":" The trait for `NumAssign` types which also implement assignment operations\n taking the second operand by reference.","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147483933},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5297,"byte_end":5302,"line_start":158,"line_end":158,"column_start":5,"column_end":10},"name":"Empty","qualname":"::FloatErrorKind::Empty","value":"FloatErrorKind::Empty","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Tuple","id":{"krate":0,"index":2147483934},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5308,"byte_end":5315,"line_start":159,"line_end":159,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::FloatErrorKind::Invalid","value":"FloatErrorKind::Invalid","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1394},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5276,"byte_end":5290,"line_start":157,"line_end":157,"column_start":10,"column_end":24},"name":"FloatErrorKind","qualname":"::FloatErrorKind","value":"FloatErrorKind::{Empty, Invalid}","parent":null,"children":[{"krate":0,"index":2147483933},{"krate":0,"index":2147483934}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1397},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5472,"byte_end":5487,"line_start":164,"line_end":164,"column_start":12,"column_end":27},"name":"ParseFloatError","qualname":"::ParseFloatError","value":"ParseFloatError { kind }","parent":null,"children":[{"krate":0,"index":2147483935}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147483935},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5498,"byte_end":5502,"line_start":165,"line_end":165,"column_start":9,"column_end":13},"name":"kind","qualname":"::ParseFloatError::kind","value":"FloatErrorKind","parent":{"krate":0,"index":1397},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":337},"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12955,"byte_end":12960,"line_start":329,"line_end":329,"column_start":8,"column_end":13},"name":"clamp","qualname":"::clamp","value":"fn <T> (input: T, min: T, max: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" A value bounded by a minimum and a maximum","sig":null,"attributes":[{"value":"inline","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12938,"byte_end":12947,"line_start":328,"line_end":328,"column_start":1,"column_end":10}}]}],"impls":[],"refs":[{"kind":"Mod","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1259,"byte_end":1269,"line_start":32,"line_end":32,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":39}},{"kind":"Mod","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1279,"byte_end":1283,"line_start":33,"line_end":33,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":59}},{"kind":"Mod","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1293,"byte_end":1296,"line_start":34,"line_end":34,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":86}},{"kind":"Mod","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,109,111,100,46,114,115],"byte_start":25051,"byte_end":25061,"line_start":1,"line_end":1,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":87}},{"kind":"Mod","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,109,111,100,46,114,115],"byte_start":25071,"byte_end":25078,"line_start":2,"line_end":2,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":92}},{"kind":"Mod","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,109,111,100,46,114,115],"byte_start":25088,"byte_end":25096,"line_start":3,"line_end":3,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":107}},{"kind":"Mod","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1306,"byte_end":1312,"line_start":35,"line_end":35,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":126}},{"kind":"Mod","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1322,"byte_end":1327,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":154}},{"kind":"Mod","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1337,"byte_end":1341,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":224}},{"kind":"Mod","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1351,"byte_end":1354,"line_start":38,"line_end":38,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":277}},{"kind":"Mod","span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1364,"byte_end":1367,"line_start":39,"line_end":39,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":309}}],"macro_refs":[],"relations":[{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":15519,"byte_end":15524,"line_start":5,"line_end":5,"column_start":17,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":819},"to":{"krate":0,"index":44}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":15527,"byte_end":15530,"line_start":5,"line_end":5,"column_start":25,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":841},"to":{"krate":0,"index":44}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":16720,"byte_end":16728,"line_start":54,"line_end":54,"column_start":24,"column_end":32},"kind":"Impl","from":{"krate":2,"index":3587},"to":{"krate":0,"index":44}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":16975,"byte_end":16980,"line_start":65,"line_end":65,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":819},"to":{"krate":0,"index":51}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":16983,"byte_end":16986,"line_start":65,"line_end":65,"column_start":24,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":849},"to":{"krate":0,"index":51}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,100,101,110,116,105,116,105,101,115,46,114,115],"byte_start":17974,"byte_end":17982,"line_start":108,"line_end":108,"column_start":22,"column_end":30},"kind":"Impl","from":{"krate":2,"index":3587},"to":{"krate":0,"index":51}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":19226,"byte_end":19231,"line_start":8,"line_end":8,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":819},"to":{"krate":0,"index":66}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":19234,"byte_end":19237,"line_start":8,"line_end":8,"column_start":27,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":317},"to":{"krate":0,"index":66}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":19240,"byte_end":19243,"line_start":8,"line_end":8,"column_start":33,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":863},"to":{"krate":0,"index":66}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":21276,"byte_end":21284,"line_start":77,"line_end":77,"column_start":28,"column_end":36},"kind":"Impl","from":{"krate":2,"index":3587},"to":{"krate":0,"index":66}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":24375,"byte_end":24378,"line_start":178,"line_end":178,"column_start":21,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":317},"to":{"krate":0,"index":83}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,115,105,103,110,46,114,115],"byte_start":24580,"byte_end":24588,"line_start":188,"line_end":188,"column_start":32,"column_end":40},"kind":"Impl","from":{"krate":2,"index":3587},"to":{"krate":0,"index":83}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":26112,"byte_end":26117,"line_start":5,"line_end":5,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":819},"to":{"krate":0,"index":98}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":26120,"byte_end":26123,"line_start":5,"line_end":5,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":841},"to":{"krate":0,"index":98}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":27124,"byte_end":27129,"line_start":35,"line_end":35,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":819},"to":{"krate":0,"index":101}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":27132,"byte_end":27135,"line_start":35,"line_end":35,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":845},"to":{"krate":0,"index":101}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":27899,"byte_end":27904,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":819},"to":{"krate":0,"index":103}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":27907,"byte_end":27910,"line_start":55,"line_end":55,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":849},"to":{"krate":0,"index":103}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":28739,"byte_end":28744,"line_start":75,"line_end":75,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":819},"to":{"krate":0,"index":105}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,99,104,101,99,107,101,100,46,114,115],"byte_start":28747,"byte_end":28750,"line_start":75,"line_end":75,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":853},"to":{"krate":0,"index":105}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":30055,"byte_end":30060,"line_start":24,"line_end":24,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":819},"to":{"krate":0,"index":114}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":30063,"byte_end":30066,"line_start":24,"line_end":24,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":841},"to":{"krate":0,"index":114}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":30815,"byte_end":30820,"line_start":43,"line_end":43,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":819},"to":{"krate":0,"index":116}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":30823,"byte_end":30826,"line_start":43,"line_end":43,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":845},"to":{"krate":0,"index":116}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":31581,"byte_end":31586,"line_start":62,"line_end":62,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":819},"to":{"krate":0,"index":118}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":31589,"byte_end":31592,"line_start":62,"line_end":62,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":849},"to":{"krate":0,"index":118}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":32364,"byte_end":32372,"line_start":81,"line_end":81,"column_start":38,"column_end":46},"kind":"Impl","from":{"krate":2,"index":3587},"to":{"krate":0,"index":114}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":32559,"byte_end":32567,"line_start":86,"line_end":86,"column_start":38,"column_end":46},"kind":"Impl","from":{"krate":2,"index":3587},"to":{"krate":0,"index":116}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,111,112,115,47,119,114,97,112,112,105,110,103,46,114,115],"byte_start":32754,"byte_end":32762,"line_start":91,"line_end":91,"column_start":38,"column_end":46},"kind":"Impl","from":{"krate":2,"index":3587},"to":{"krate":0,"index":118}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,98,111,117,110,100,115,46,114,115],"byte_start":35093,"byte_end":35101,"line_start":39,"line_end":39,"column_start":30,"column_end":38},"kind":"Impl","from":{"krate":2,"index":3587},"to":{"krate":0,"index":143}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":36888,"byte_end":36891,"line_start":14,"line_end":14,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":317},"to":{"krate":0,"index":162}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":36898,"byte_end":36902,"line_start":15,"line_end":15,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":821},"to":{"krate":0,"index":162}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":36909,"byte_end":36916,"line_start":16,"line_end":16,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":271},"to":{"krate":0,"index":162}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":36923,"byte_end":36933,"line_start":17,"line_end":17,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":2,"index":1124},"to":{"krate":0,"index":162}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,102,108,111,97,116,46,114,115],"byte_start":36940,"byte_end":36943,"line_start":18,"line_end":18,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":863},"to":{"krate":0,"index":162}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":79073,"byte_end":79078,"line_start":276,"line_end":276,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":819},"to":{"krate":0,"index":250}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":83340,"byte_end":83348,"line_start":390,"line_end":390,"column_start":38,"column_end":46},"kind":"Impl","from":{"krate":2,"index":3587},"to":{"krate":0,"index":229}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":83509,"byte_end":83517,"line_start":394,"line_end":394,"column_start":42,"column_end":50},"kind":"Impl","from":{"krate":2,"index":3587},"to":{"krate":0,"index":250}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":84033,"byte_end":84038,"line_start":416,"line_end":416,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":819},"to":{"krate":0,"index":271}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":84041,"byte_end":84052,"line_start":416,"line_end":416,"column_start":28,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":229},"to":{"krate":0,"index":271}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,99,97,115,116,46,114,115],"byte_start":85031,"byte_end":85039,"line_start":449,"line_end":449,"column_start":30,"column_end":38},"kind":"Impl","from":{"krate":2,"index":3587},"to":{"krate":0,"index":271}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":87058,"byte_end":87063,"line_start":9,"line_end":9,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":819},"to":{"krate":0,"index":291}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":87070,"byte_end":87074,"line_start":10,"line_end":10,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":821},"to":{"krate":0,"index":291}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":87081,"byte_end":87084,"line_start":11,"line_end":11,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":317},"to":{"krate":0,"index":291}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":87087,"byte_end":87094,"line_start":11,"line_end":11,"column_start":13,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":271},"to":{"krate":0,"index":291}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":87101,"byte_end":87108,"line_start":12,"line_end":12,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":143},"to":{"krate":0,"index":291}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":87115,"byte_end":87125,"line_start":13,"line_end":13,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":2,"index":1124},"to":{"krate":0,"index":291}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":87128,"byte_end":87131,"line_start":13,"line_end":13,"column_start":20,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1115},"to":{"krate":0,"index":291}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":87134,"byte_end":87136,"line_start":13,"line_end":13,"column_start":26,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1100},"to":{"krate":0,"index":291}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":87143,"byte_end":87146,"line_start":14,"line_end":14,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":885},"to":{"krate":0,"index":291}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":87166,"byte_end":87172,"line_start":15,"line_end":15,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":889},"to":{"krate":0,"index":291}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":87192,"byte_end":87197,"line_start":16,"line_end":16,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":893},"to":{"krate":0,"index":291}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":87217,"byte_end":87223,"line_start":17,"line_end":17,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":897},"to":{"krate":0,"index":291}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":87243,"byte_end":87246,"line_start":18,"line_end":18,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":901},"to":{"krate":0,"index":291}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":87273,"byte_end":87276,"line_start":19,"line_end":19,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":906},"to":{"krate":0,"index":291}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":87303,"byte_end":87313,"line_start":20,"line_end":20,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":98},"to":{"krate":0,"index":291}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":87333,"byte_end":87343,"line_start":21,"line_end":21,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":101},"to":{"krate":0,"index":291}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":87363,"byte_end":87373,"line_start":22,"line_end":22,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":103},"to":{"krate":0,"index":291}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":87393,"byte_end":87403,"line_start":23,"line_end":23,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":105},"to":{"krate":0,"index":291}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,105,110,116,46,114,115],"byte_start":87423,"byte_end":87433,"line_start":24,"line_end":24,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":88},"to":{"krate":0,"index":291}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1518,"byte_end":1527,"line_start":43,"line_end":43,"column_start":16,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":1097},"to":{"krate":0,"index":317}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1530,"byte_end":1534,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":44},"to":{"krate":0,"index":317}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1537,"byte_end":1540,"line_start":43,"line_end":43,"column_start":35,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":51},"to":{"krate":0,"index":317}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1543,"byte_end":1549,"line_start":43,"line_end":43,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":320},"to":{"krate":0,"index":317}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2210,"byte_end":2213,"line_start":67,"line_end":67,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":841},"to":{"krate":0,"index":320}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2242,"byte_end":2245,"line_start":68,"line_end":68,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":845},"to":{"krate":0,"index":320}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2274,"byte_end":2277,"line_start":69,"line_end":69,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":849},"to":{"krate":0,"index":320}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2306,"byte_end":2309,"line_start":70,"line_end":70,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":853},"to":{"krate":0,"index":320}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2338,"byte_end":2341,"line_start":71,"line_end":71,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":858},"to":{"krate":0,"index":320}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2413,"byte_end":2414,"line_start":74,"line_end":74,"column_start":46,"column_end":47},"kind":"Impl","from":{"krate":0,"index":2147483691},"to":{"krate":0,"index":320}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2809,"byte_end":2812,"line_start":86,"line_end":86,"column_start":19,"column_end":22},"kind":"SuperTrait","from":{"krate":0,"index":317},"to":{"krate":0,"index":322}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2823,"byte_end":2829,"line_start":86,"line_end":86,"column_start":33,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":320},"to":{"krate":0,"index":322}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2862,"byte_end":2863,"line_start":87,"line_end":87,"column_start":20,"column_end":21},"kind":"Impl","from":{"krate":0,"index":2147483695},"to":{"krate":0,"index":322}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3140,"byte_end":3146,"line_start":93,"line_end":93,"column_start":25,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":320},"to":{"krate":0,"index":324}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3169,"byte_end":3175,"line_start":93,"line_end":93,"column_start":54,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":320},"to":{"krate":0,"index":324}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3226,"byte_end":3227,"line_start":94,"line_end":94,"column_start":32,"column_end":33},"kind":"Impl","from":{"krate":0,"index":2147483699},"to":{"krate":0,"index":324}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3496,"byte_end":3505,"line_start":100,"line_end":100,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":869},"to":{"krate":0,"index":326}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3517,"byte_end":3526,"line_start":101,"line_end":101,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":872},"to":{"krate":0,"index":326}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3538,"byte_end":3547,"line_start":102,"line_end":102,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":875},"to":{"krate":0,"index":326}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3559,"byte_end":3568,"line_start":103,"line_end":103,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":878},"to":{"krate":0,"index":326}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3580,"byte_end":3589,"line_start":104,"line_end":104,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":881},"to":{"krate":0,"index":326}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3634,"byte_end":3635,"line_start":107,"line_end":107,"column_start":36,"column_end":37},"kind":"Impl","from":{"krate":0,"index":2147483703},"to":{"krate":0,"index":326}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3937,"byte_end":3940,"line_start":118,"line_end":118,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":317},"to":{"krate":0,"index":328}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3943,"byte_end":3955,"line_start":118,"line_end":118,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":326},"to":{"krate":0,"index":328}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3981,"byte_end":3982,"line_start":119,"line_end":119,"column_start":23,"column_end":24},"kind":"Impl","from":{"krate":0,"index":2147483705},"to":{"krate":0,"index":328}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4245,"byte_end":4254,"line_start":125,"line_end":125,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":328},"to":{"krate":0,"index":330}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4265,"byte_end":4277,"line_start":125,"line_end":125,"column_start":45,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":326},"to":{"krate":0,"index":330}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4316,"byte_end":4317,"line_start":126,"line_end":126,"column_start":26,"column_end":27},"kind":"Impl","from":{"krate":0,"index":2147483707},"to":{"krate":0,"index":330}},{"span":{"file_name":[46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,110,117,109,45,116,114,97,105,116,115,45,48,46,49,46,52,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4862,"byte_end":4870,"line_start":144,"line_end":144,"column_start":22,"column_end":30},"kind":"Impl","from":{"krate":2,"index":3587},"to":{"krate":0,"index":317}}]}